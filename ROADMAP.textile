h1. VER Roadmap

h2. Sessions

Storing the current state of VER on disk for next startup.
Possible naming sessions? default names could be generated from CLI arguments,
so if you use `ver foo.rb` the session is called 'foo.rb'.
We should store the currently open buffers, the mode that they are in, the
insert mark position, and anything else we might come up with later.

h2. VCS integration

Mostly shortcuts for various source control systems.
These should simply open a terminal and execute a command.
Example can be the git plugin.

h2. org-mode / remember

Something to get things done and be reminded of them.

h2. Code folding

Exapnd sections of code, we can start out by the folding rules specified by the
tm bundle preferences.
Eventually this would be useful for other things like Viki.

h2. Notebook tabs

Using ttk::notebook we could implement tabs instead of the tiling view, or
combine the two.

h2. Markdown

The current tm syntax simply doesn't compile to a clean oniguruma regexp, try to
fix it.

h2. Dictionary

Looking up dictionaries... translation.
Maybe using something like google translate API when online?

h2. Some kind of indication which view is the current one.

maybe using relief?
view.configure relief: :sunken, borderwidth: 3

h2. Support mirror and mirror transformation for snippets

The most powerful snipets are using mirror and mirror transformations.
In order to provide full support, we need to implement that.

h2. Improve integration of scope selectors and bundles

Right now we are doing a very simple matching of scope selectors, just to get
things started.
I'd like to improve on that by applying correct precedence for matching scopes.

h2. Improve integration of Bundles

Allowing bundles to bind keychains to commands.
Might be problematic, as the keychains are specific for the TM environment, so
it's very OSX specific and will conflict with e.g. emacs or vim keymaps.

Maybe we need a separate TM keymap and define a common prefix to the keychains
in other keymaps.
