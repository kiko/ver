#!/usr/bin/env ruby

require 'optparse'
require 'pathname'

file = Pathname(__FILE__)
file = file.readlink if file.symlink?

ver = file.parent.parent + 'lib/ver'
require ver
require 'eventmachine'

module VER
  EM.epoll
  EM.run do
    CHANNEL = EM::Channel.new

    VER::Server.start
  end
end

__END__


# config = VER::Config

op = OptionParser.new do |o|
  o.version = "VER - VIM & Emacs in Ruby #{VER::VERSION}"

  o.define_head [
      "",
      "Usage: ver [arguments] [file ..]     edit specified file(s)",
      "   or: ver [arguments] -             read text from stdin",
      "",
  ].join("\n")

  o.on('-h', '--help', "Display this help"){ puts o; exit }
  o.on('-v', '--version', "Show version"){ puts version exit }
  o.on('-k', '--keymap STRING', "Use a different keymap: vi or diakonos"){|k|
    config[:keymap] = File.join(config[:rc_dir], "keymap/#{k}")
  }
end

op.parse!(ARGV)

if ARGV.include?('-')
  text = $stdin.readlines.join("\n")

  VER.start(:temp => text)
else
  files = []

  ARGV.each do |arg|
    case arg
    when /^\+(\d+)$/
      files.last[:line] = $1.to_i
    when /^\+\/(.*)$/
      files.last[:regex] = Regexp.new($1)
    when String
      files << {:file => arg}
    end
  end

  VER.start(:files => files)
end
