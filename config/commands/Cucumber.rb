# Encoding: UTF-8

[{beforeRunningCommand: "nop",
  command: 
   "#!/usr/bin/env sh\ncat <<'RUBYEOF' > /tmp/cucumber-$$.rb\n\nrequire ENV['TM_BUNDLE_SUPPORT'] + \"/lib/cucumber/mate/table_aligner\"\nTM_DISCARD = 200\n\ninput = STDIN.read.split(\"\\n\")\noutput = Cucumber::Mate::TableAligner.new.align(input)\n\nif input == output\n  exit TM_DISCARD\nelse\n  puts(output)\nend\n\nRUBYEOF\n\n${TM_RUBY:-ruby} -w -Ku /tmp/cucumber-$$.rb; exit_status=$?; rm /tmp/cucumber-$$.rb; exit $exit_status",
  fallbackInput: "document",
  input: "selection",
  keyEquivalent: "@|",
  name: "Align Table Cells",
  output: "replaceSelectedText",
  uuid: "C210145E-4123-4FC5-BFB3-BC7D8B884F4A"},
 {beforeRunningCommand: "nop",
  command: 
   "#!/usr/bin/env ruby\n\nrequire ENV['TM_BUNDLE_SUPPORT'] + \"/lib/cucumber/mate/feature_helper\"\nbegin\n\tCucumber::Mate::FeatureHelper.new(ENV['TM_FILEPATH']).autocomplete_step($stdout, ENV['TM_CURRENT_LINE'])\nrescue Cucumber::Mate::Files::InvalidFilePathError => e\n\tCucumber::Mate::TextMateHelper.alert e.message\n\tprint ENV['TM_CURRENT_LINE']\nend",
  fallbackInput: "line",
  input: "selection",
  keyEquivalent: "~",
  name: "Autocomplete Step",
  output: "insertAsSnippet",
  scope: "text.gherkin.feature",
  uuid: "46204E4A-2DA4-4107-9742-60F13EED58B8"},
 {beforeRunningCommand: "saveActiveFile",
  command: 
   "#!/usr/bin/env ruby\n\nrequire ENV['TM_BUNDLE_SUPPORT'] + \"/lib/cucumber/mate/feature_helper\"\nrunner = Cucumber::Mate::Runner.new(STDOUT, ENV['TM_PROJECT_DIRECTORY'], ENV['TM_FILEPATH'], ENV['TM_CUCUMBER_BIN'], ENV['TM_CUCUMBER_OPTS'])\n\nrunner.autoformat_feature\n\n",
  fallbackInput: "document",
  input: "none",
  name: "Autoformat Feature (using Cucumber)",
  output: "discard",
  scope: "text.gherkin.feature, source.ruby.rspec.cucumber.steps",
  uuid: "47E22DF4-07E4-4B15-9BDC-6DB1AE434609"},
 {beforeRunningCommand: "nop",
  command: 
   "#!/usr/bin/env sh\n\ncat <<'RUBYEOF' > /tmp/cucumber-$$.rb\nrequire ENV['TM_BUNDLE_SUPPORT'] + \"/lib/cucumber/mate/feature_helper\"\nbegin\n\tCucumber::Mate::FeatureHelper.new(ENV['TM_FILEPATH']).choose_alternate_file\nrescue Cucumber::Mate::Files::InvalidFilePathError => e\n\tCucumber::Mate::TextMateHelper.alert e.message\nend\n\nRUBYEOF\n\n${TM_RUBY:-ruby} /tmp/cucumber-$$.rb; exit_status=$?; rm /tmp/cucumber-$$.rb; exit $exit_status",
  input: "none",
  keyEquivalent: "^$",
  name: "Choose Alternate File",
  output: "showAsTooltip",
  scope: "text.gherkin.feature, source.ruby.rspec.cucumber.steps",
  uuid: "2BCE4864-D70A-4C51-B49D-FB3220130B74"},
 {beforeRunningCommand: "nop",
  command: 
   "#!/usr/bin/env sh\ncat <<'RUBYEOF' > /tmp/cucumber-$$.rb\n\nrequire ENV['TM_BUNDLE_SUPPORT'] + \"/lib/cucumber/mate/feature_helper\"\nCucumber::Mate::FeatureHelper.new(ENV['TM_FILEPATH']).create_all_undefined_steps\n\nRUBYEOF\n\n${TM_RUBY:-ruby} /tmp/cucumber-$$.rb; exit_status=$?; rm /tmp/cucumber-$$.rb; exit $exit_status",
  input: "none",
  keyEquivalent: "^~$@",
  name: "Create All Undefined Steps",
  output: "showAsTooltip",
  scope: "text.gherkin.feature, source.ruby.cucumber.steps",
  uuid: "A165BB7A-E147-499B-8DF2-CA1FC9049298"},
 {beforeRunningCommand: "nop",
  command: 
   "#!/usr/bin/env sh\ncat <<'RUBYEOF' > /tmp/cucumber-$$.rb\n\nrequire ENV['TM_BUNDLE_SUPPORT'] + \"/lib/cucumber/mate/feature_helper\"\nbegin\n\tCucumber::Mate::FeatureHelper.new(ENV['TM_FILEPATH']).goto_alternate_file\nrescue Cucumber::Mate::Files::InvalidFilePathError => e\n\tCucumber::Mate::TextMateHelper.alert e.message\nend\n\nRUBYEOF\n\n${TM_RUBY:-ruby} /tmp/cucumber-$$.rb; exit_status=$?; rm /tmp/cucumber-$$.rb; exit $exit_status",
  input: "none",
  keyEquivalent: "^$",
  name: "Goto Alternate File",
  output: "showAsTooltip",
  scope: "text.gherkin.feature, source.ruby.rspec.cucumber.steps",
  uuid: "6AD6154B-3EE8-43D1-B87F-6261C859AD07"},
 {beforeRunningCommand: "nop",
  command: 
   "#!/usr/bin/env sh\ncat <<'RUBYEOF' > /tmp/cucumber-$$.rb\n\nrequire ENV['TM_BUNDLE_SUPPORT'] + \"/lib/cucumber/mate/feature_helper\"\nCucumber::Mate::FeatureHelper.new(ENV['TM_FILEPATH']).goto_current_step(ENV['TM_LINE_NUMBER'])\n\nRUBYEOF\n\n${TM_RUBY:-ruby} /tmp/cucumber-$$.rb; exit_status=$?; rm /tmp/cucumber-$$.rb; exit $exit_status",
  fallbackInput: "document",
  input: "none",
  keyEquivalent: "^~$",
  name: "Goto Current Step",
  output: "showAsTooltip",
  scope: "text.gherkin.feature, source.ruby.cucumber.steps",
  uuid: "8E156A1E-AF51-4CFB-949F-47B6BCE6E6EC"},
 {beforeRunningCommand: "saveActiveFile",
  command: 
   "#!/usr/bin/env sh\ncat <<'RUBYEOF' > /tmp/cucumber-$$.rb\n\nrequire ENV['TM_BUNDLE_SUPPORT'] + \"/lib/cucumber/mate/feature_helper\"\nrunner = Cucumber::Mate::Runner.new(STDOUT, ENV['TM_PROJECT_DIRECTORY'], ENV['TM_FILEPATH'], ENV['TM_CUCUMBER_BIN'], ENV['TM_CUCUMBER_OPTS'])\n\nrunner.run_feature\n\nRUBYEOF\n\n${TM_RUBY:-ruby} /tmp/cucumber-$$.rb; exit_status=$?; rm /tmp/cucumber-$$.rb; exit $exit_status",
  fallbackInput: "document",
  input: "document",
  keyEquivalent: "@r",
  name: "Run Feature",
  output: "showAsHTML",
  scope: "text.gherkin.feature, source.ruby.rspec.cucumber.steps",
  uuid: "1531D367-DCDF-4F89-8BDB-896FAA16830E"},
 {beforeRunningCommand: "saveActiveFile",
  command: 
   "#!/usr/bin/env sh\ncat <<'RUBYEOF' > /tmp/cucumber-$$.rb\n\nrequire ENV['TM_BUNDLE_SUPPORT'] + \"/lib/cucumber/mate/feature_helper\"\nrunner = Cucumber::Mate::Runner.new(STDOUT, ENV['TM_PROJECT_DIRECTORY'], ENV['TM_FILEPATH'], ENV['TM_CUCUMBER_BIN'], ENV['TM_CUCUMBER_OPTS'])\n\nrunner.run_scenario(ENV['TM_LINE_NUMBER'])\n\nRUBYEOF\n\n${TM_RUBY:-ruby} /tmp/cucumber-$$.rb; exit_status=$?; rm /tmp/cucumber-$$.rb; exit $exit_status",
  fallbackInput: "document",
  input: "document",
  keyEquivalent: "@R",
  name: "Run Single Scenario",
  output: "showAsHTML",
  scope: "text.gherkin.feature",
  uuid: "7B92D0E5-FCF2-4CE0-A900-821E7EA000C7"},
 {beforeRunningCommand: "nop",
  command: 
   "cd \"$TM_BUNDLE_PATH\"\n\necho \"<pre>\"\n[ -d \".svn\" ] && svn up\n[ -d \".git\" ] && git pull\n[ ! -d .svn ] && [ ! -d .git ] && echo \"You must install the Cucumber bundle using Subversion or Git in order to update via this command.\"\n\nosascript -e 'tell app \"TextMate\" to reload bundles'\n\necho \"</pre>\"",
  input: "selection",
  name: "Update Cucumber Bundle",
  output: "showAsHTML",
  uuid: "5810C291-0741-4FEA-8227-1BEA776B6B23"}]
